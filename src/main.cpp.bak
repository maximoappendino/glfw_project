#define GLEW_STATIC //according to https://raw.githubusercontent.com/Overv/Open.GL/master/ebook/Modern%20OpenGL%20Guide.pdf
#include <GL/glew.h> // Include GLEW first
#include <GLFW/glfw3.h> // Then include GLFW (which includes OpenGL headers)
#include <iostream>

int main() {
    if (!glfwInit()) {
        std::cerr << "Failed to initialize GLFW\n";
        return -1;
    }

    // Use Wayland explicitly
    glfwWindowHint(GLFW_PLATFORM, GLFW_PLATFORM_WAYLAND);

    // Create a window with an OpenGL context
    GLFWwindow* window = glfwCreateWindow(800, 600, "GLFW Window", nullptr, nullptr);
    if (!window) {
        std::cerr << "Failed to create GLFW window\n";
        glfwTerminate();
        return -1;
    }

    glfwMakeContextCurrent(window); // Make OpenGL context current

    while (!glfwWindowShouldClose(window)) {
        glfwPollEvents();
        
        // Render (clear screen with a color)
        glClearColor(0.2f, 0.3f, 0.3f, 1.0f);
        glClear(GL_COLOR_BUFFER_BIT);

        glfwSwapBuffers(window); // Swap buffers
    }

    glfwDestroyWindow(window);
    glfwTerminate();
    return 0;
}

